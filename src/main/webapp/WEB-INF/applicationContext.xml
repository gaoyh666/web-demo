<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">


	<util:properties id="hibernate_properties"
		location="classpath:hibernate.properties"></util:properties>

	<context:component-scan
		base-package="com.gaoyh.app.init"></context:component-scan>

	<!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->

	<!-- 占位符 properties解析 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
		<!-- <property name="properties" ref="applicationProperties" > </property> -->
	</bean>

	<!-- 定义数据源 -->
	<!-- <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource" 
		> <property name="driverClassName" value="${jdbc.driverClassName}" /> <property 
		name="url" value="${jdbc.url}" /> <property name="username" value="${jdbc.username}" 
		/> <property name="password" value="${jdbc.password}" /> </bean> -->

	<bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/exampleDB" >
			<!-- <value>jdbc/exampleDB</value> -->
		</property>
		<property name="resourceRef" value="true" />
	</bean>

	<!-- <context:property-placeholder properties-ref="applicationProperties" 
		/> -->
	<bean name="applicationProperties"
		class="org.springmodules.commons.configuration.CommonsConfigurationFactoryBean">
		<constructor-arg ref="databaseConfiguration" />
	</bean>

	<bean name="databaseConfiguration"
		class="org.apache.commons.configuration.DatabaseConfiguration">
		<constructor-arg index="0" ref="dataSource" />
		<constructor-arg index="1" value="t_app_config" />
		<constructor-arg index="2" value="param_name" />
		<constructor-arg index="3" value="param_key" />
		<constructor-arg index="4" value="param_value" />
		<constructor-arg index="5" value="d13" />
	</bean>




	<!-- jdbcTemplate配置 -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

	<!-- 事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the Service interface -->
	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* x.y.service..*Service.*(..))" />

		<aop:advisor pointcut-ref="serviceOperation"
			advice-ref="txAdvice" />
	</aop:config>
	<!-- <tx:annotation-driven transaction-manager="txManager"/> -->

	<!-- hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mappingResources"> <list> <value>org/springframework/samples/petclinic/hibernate/petclinic.hbm.xml 
			</value> </list> </property> -->
		<property name="packagesToScan">
			<list>
				<value>com.gaoyh.app.model</value>
			</list>
		</property>
		<!-- DDL操作时 表名，字段为小写，当有大写字母的时候会添加下划线分隔符号 -->
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy">
			</bean>
		</property>

		<!-- <property name="hibernateProperties"> <value> hibernate.dialect=${hibernate.dialect} 
			</value> </property> -->

	</bean>

	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<constructor-arg ref="sessionFactory"></constructor-arg>
	</bean>

	<!-- <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->
	<!--bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" 
		p:location="/WEB-INF/jdbc.properties" /> <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}" p:username="${jdbc.username}" 
		p:password="${jdbc.password}" / -->

	<!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->

</beans>
